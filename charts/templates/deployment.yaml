apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "modulesapp.fullname" . }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ template "modulesapp.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  progressDeadlineSeconds: 600
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 50%
      maxSurge: 50%
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: {{ template "modulesapp.name" . }}
      release: {{ .Release.Name }}
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: {{ template "modulesapp.name" . }}
    spec:
      containers:
      - env:
        - name: MODULE_NUMBER
          value: {{ .Values.moduleNumber }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy:  {{ .Values.image.pullPolicy }}
        name: {{ .Chart.Name }}
        ports:
        - containerPort: {{ .Values.service.internalPort }}
          name: {{ .Chart.Name }}
          protocol: TCP
        resources:
{{ toYaml .Values.resources | indent 11 }}
    {{- if .Values.nodeSelector }}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      nodeSelector:{}
      tolerations: {}
      imagePullSecrets: 
        - name: {{ .Values.imagePullSecrets }}
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status: {}
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  namespace: {{ .Values.namespace }}
  name: {{ template "modulesapp.fullname" . }}
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: {{ template "modulesapp.name" . }}
